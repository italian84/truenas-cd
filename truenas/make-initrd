#!/bin/bash

CURDIR="$(pwd)"

APTLY="aptly --config ./conf/aptly.conf"

TGT="./zfs-chroot"
export TGT

if [ -d "$TGT" ] ; then
	umount -f $TGT/proc
	umount -f $TGT/sys
	rm -rf $TGT
fi

# Make sure the truenas target exists
ln -fs /usr/share/debootstrap/scripts/bullseye /usr/share/debootstrap/scripts/truenas

# Bootstrap the zfs chroot
debootstrap truenas $TGT file:///srv/aptly-publish/truenas/unstable
if [ $? -ne 0 ] ; then exit 1; fi

# Make the chroot ready to build
mount proc $TGT/proc -t proc
if [ $? -ne 0 ] ; then exit 1; fi
mount sysfs $TGT/sys -t sysfs
if [ $? -ne 0 ] ; then exit 1; fi
cp /etc/hosts $TGT/etc/hosts

# Get ZFS Module Name
ZFSPKG=$(ls /srv/aptly-publish/truenas/unstable/pool/main/z/zfs-dkms-bin/zfs-modules*)
ZFSDEB=$(basename $ZFSPKG | cut -d '_' -f 1)

# Setup the apt repo
echo "deb http://127.0.0.1/truenas/unstable/ truenas main" > ${TGT}/etc/apt/sources.list

chroot ${TGT} apt update
if [ $? -ne 0 ] ; then exit 1; fi
export LC_ALL="C"

# Prepare the chroot environment
chroot ${TGT} apt install -y binutils-common debian-installer git myrepos curl \
	xsltproc docbook-xml docbook-xsl libbogl-dev genext2fs mklibs \
       	mklibs-copy genisoimage syslinux pxelinux shim-signed wget \
	grub-efi-amd64-signed bf-utf-source win32-loader librsvg2-bin \
	debhelper dctrl-tools bc dosfstools syslinux-utils isolinux \
	xorriso tofrodos
if [ $? -ne 0 ] ; then exit 1; fi

# Checkout the full debian-installer repos
chroot ${TGT} git clone --depth=1 https://salsa.debian.org/installer-team/d-i.git /debian-installer
chroot ${TGT} bash -c "cd /debian-installer && scripts/git-setup"
chroot ${TGT} bash -c "cd /debian-installer && mr checkout"

# Set our build defaults to truenas
echo "deb [trusted=yes] http://127.0.0.1/truenas/unstable/ truenas main/debian-installer" \
	> ${TGT}/debian-installer/installer/build/sources.list.udeb.local
echo "DEBIAN_RELEASE = truenas" \
	>> ${TGT}/debian-installer/installer/build/config/common
echo "DEBIAN_VERSION = truenas" \
	>> ${TGT}/debian-installer/installer/build/config/common
echo "LINUX_KERNEL_ABI=5.2.0-3" \
	>> ${TGT}/debian-installer/installer/build/config/common
chroot ${TGT} bash -c "cd /debian-installer/installer/build && make build_cdrom_isolinux"

# Copy out the resulting kernel / initrd image before we cleanup
cp ${TGT}/debian-installer/installer/build/dest/cdrom/vmlinuz ./vmlinuz
cp ${TGT}/debian-installer/installer/build/dest/cdrom/initrd.gz ./initrd.gz

# Cleanup the chroot
umount -f $TGT/proc
umount -f $TGT/sys

# Cleanup
rm -rf $TGT
